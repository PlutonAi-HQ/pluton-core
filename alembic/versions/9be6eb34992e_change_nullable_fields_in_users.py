"""change nullable fields in users

Revision ID: 9be6eb34992e
Revises: 
Create Date: 2024-12-27 12:35:58.323316

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9be6eb34992e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_agent_sessions_agent_id', table_name='agent_sessions')
    op.drop_index('idx_agent_sessions_session_id', table_name='agent_sessions')
    op.drop_index('idx_agent_sessions_user_id', table_name='agent_sessions')
    op.drop_table('agent_sessions')
    op.drop_index('idx_recipes_content_hash', table_name='recipes')
    op.drop_index('idx_recipes_id', table_name='recipes')
    op.drop_index('idx_recipes_name', table_name='recipes')
    op.drop_table('recipes')
    op.drop_table('agent_memory')
    op.alter_column('users', 'seed_phrase',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'private_key',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'public_key',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_unique_constraint(None, 'users', ['chat_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'public_key',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'private_key',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'seed_phrase',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_table('agent_memory',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('memory', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='agent_memory_pkey')
    )
    op.create_table('recipes',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True),
    sa.Column('filters', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('embedding', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('usage', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('content_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='recipes_pkey')
    )
    op.create_index('idx_recipes_name', 'recipes', ['name'], unique=False)
    op.create_index('idx_recipes_id', 'recipes', ['id'], unique=False)
    op.create_index('idx_recipes_content_hash', 'recipes', ['content_hash'], unique=False)
    op.create_table('agent_sessions',
    sa.Column('session_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('agent_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('memory', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('agent_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('user_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('session_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.BIGINT(), server_default=sa.text('(EXTRACT(epoch FROM now()))::bigint'), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('session_id', name='agent_sessions_pkey')
    )
    op.create_index('idx_agent_sessions_user_id', 'agent_sessions', ['user_id'], unique=False)
    op.create_index('idx_agent_sessions_session_id', 'agent_sessions', ['session_id'], unique=False)
    op.create_index('idx_agent_sessions_agent_id', 'agent_sessions', ['agent_id'], unique=False)
    # ### end Alembic commands ###
